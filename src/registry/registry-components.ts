import type { Registry } from "shadcn/schema"

/**
 * Este arquivo define os metadados para os componentes de UI do projeto.
 * Cada objeto no array representa um componente e suas propriedades, como nome, tipo, descrição,
 * autor, dependências e caminhos de arquivo. Essas informações são usadas pelo processo
 * de construção do registro para gerar arquivos como `index.tsx` e `registry.autogenerated.json`.
 */
export const components: Registry["items"] = [
  /**
   * Exemplo `adminsys-demo`:
   * Demonstra o uso do componente `adminsys`.
   */
  {
    name: "adminsys",
    type: "registry:block",
    dependencies: ["zod"],
    registryDependencies: [
      "<registryBaseUrl>/admin-layout.json",
      "<registryBaseUrl>/typography.json",
      "<registryBaseUrl>/not-found.json",
      "<registryBaseUrl>/site-layout.json",
      "<registryBaseUrl>/hero-01.json",
      "<registryBaseUrl>/icons.json",
      "<registryBaseUrl>/logo-adminsys.json",
      "<registryBaseUrl>/metadata.json",
    ],
    envVars: {
      NEXT_PUBLIC_APP_URL: "http://localhost:3000",
    },
    files: [
      {
        path: "examples/adminsys/app/layout.tsx",
        type: "registry:file",
        target: "src/app/layout.tsx",
      },
      {
        path: "examples/adminsys/app/not-found.tsx",
        type: "registry:file",
        target: "src/app/not-found.tsx",
      },
      {
        path: "examples/adminsys/app/sitemap.ts",
        type: "registry:file",
        target: "src/app/sitemap.ts",
      },
      {
        path: "examples/adminsys/app/(home)/layout.tsx",
        type: "registry:file",
        target: "src/app/(home)/layout.tsx",
      },
      {
        path: "examples/adminsys/app/(home)/page.tsx",
        type: "registry:file",
        target: "src/app/(home)/page.tsx",
      },
      {
        path: "examples/adminsys/config/types/index.ts",
        type: "registry:file",
        target: "src/config/types/index.ts",
      },
      {
        path: "examples/adminsys/config/validation/env.schema.ts",
        type: "registry:file",
        target: "src/config/validation/env.schema.ts",
      },
      {
        path: "examples/adminsys/config/validation/site-config.schema.ts",
        type: "registry:file",
        target: "src/config/validation/site-config.schema.ts",
      },
      {
        path: "examples/adminsys/config/env.ts",
        type: "registry:file",
        target: "src/config/env.ts",
      },
      {
        path: "examples/adminsys/config/site-config.tsx",
        type: "registry:file",
        target: "src/config/site-config.tsx",
      },
      {
        path: "examples/adminsys/app/(admin)/admin/layout.tsx",
        type: "registry:file",
        target: "src/app/(admin)/admin/layout.tsx",
      },
      {
        path: "examples/adminsys/app/(admin)/admin/dashboard/page.tsx",
        type: "registry:file",
        target: "src/app/(admin)/admin/dashboard/page.tsx",
      },
      {
        path: "examples/adminsys/app/(admin)/admin/folder-01/submenu-01/page.tsx",
        type: "registry:file",
        target: "src/app/(admin)/admin/folder-01/submenu-01/page.tsx",
      },
      {
        path: "examples/adminsys/app/(admin)/admin/folder-01/submenu-02/page.tsx",
        type: "registry:file",
        target: "src/app/(admin)/admin/folder-01/submenu-02/page.tsx",
      },
    ],
  },
  /**
   * Exemplo `sitesys-demo`:
   * Demonstra o uso do componente `sitesys`.
   */
  {
    name: "sitesys",
    type: "registry:block",
    dependencies: ["zod"],
    registryDependencies: [
      "<registryBaseUrl>/site-layout.json",
      "<registryBaseUrl>/hero-01.json",
      "<registryBaseUrl>/icons.json",
      "<registryBaseUrl>/logo-sitesys.json",
      "<registryBaseUrl>/metadata.json",
    ],
    envVars: {
      NEXT_PUBLIC_APP_URL: "http://localhost:3000",
    },
    files: [
      {
        path: "examples/sitesys/app/layout.tsx",
        type: "registry:file",
        target: "src/app/layout.tsx",
      },
      {
        path: "examples/sitesys/app/sitemap.ts",
        type: "registry:file",
        target: "src/app/sitemap.ts",
      },
      {
        path: "examples/sitesys/app/(home)/layout.tsx",
        type: "registry:file",
        target: "src/app/(home)/layout.tsx",
      },
      {
        path: "examples/sitesys/app/(home)/page.tsx",
        type: "registry:file",
        target: "src/app/(home)/page.tsx",
      },
      {
        path: "examples/sitesys/config/types/index.ts",
        type: "registry:file",
        target: "src/config/types/index.ts",
      },
      {
        path: "examples/sitesys/config/validation/env.schema.ts",
        type: "registry:file",
        target: "src/config/validation/env.schema.ts",
      },
      {
        path: "examples/sitesys/config/validation/site-config.schema.ts",
        type: "registry:file",
        target: "src/config/validation/site-config.schema.ts",
      },
      {
        path: "examples/sitesys/config/env.ts",
        type: "registry:file",
        target: "src/config/env.ts",
      },
      {
        path: "examples/sitesys/config/site-config.tsx",
        type: "registry:file",
        target: "src/config/site-config.tsx",
      },
    ],
  },
  /**
   * Componente `dropdown-user`:
   * Um componente de dropdown-user.
   */
  {
    name: "dropdown-user",
    type: "registry:component",
    description: "A dropdown-user component.",
    title: "dropdown-user",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/auth/dropdown/dropdown-user.tsx",
        type: "registry:component",
        target: "src/components/auth/dropdown/dropdown-user.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/auth/dropdown#dropdown-user",
  },
  /**
   * Componente `admin-navbar`:
   * Um componente de admin-navbar.
   */
  {
    name: "admin-navbar",
    type: "registry:component",
    description: "A admin-navbar component.",
    title: "admin-navbar",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "sidebar",
      "<registryBaseUrl>/container.json",
      "<registryBaseUrl>/dropdown-user.json",
      "<registryBaseUrl>/toggle-theme.json",
    ],
    files: [
      {
        path: "components/layout/navbar/admin-navbar.tsx",
        type: "registry:component",
        target: "src/components/layout/navbar/admin-navbar.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/navbar#admin-navbar",
  },
  /**
   * Componente `admin-sidebar`:
   * Um componente de admin-sidebar.
   */
  {
    name: "admin-sidebar",
    type: "registry:component",
    description: "A admin-sidebar component.",
    title: "admin-sidebar",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "avatar",
      "dropdown-menu",
      "sidebar",
      "scroll-area",
      "collapsible",
      "<registryBaseUrl>/logo-adminsys.json",
    ],
    files: [
      {
        path: "components/layout/sidebar/inc/part/sidebar-menu-folder.tsx",
        type: "registry:component",
        target:
          "src/components/layout/sidebar/inc/part/sidebar-menu-folder.tsx",
      },
      {
        path: "components/layout/sidebar/inc/part/sidebar-menu-link.tsx",
        type: "registry:component",
        target: "src/components/layout/sidebar/inc/part/sidebar-menu-link.tsx",
      },
      {
        path: "components/layout/sidebar/inc/part/sidebar-submenu-link.tsx",
        type: "registry:component",
        target:
          "src/components/layout/sidebar/inc/part/sidebar-submenu-link.tsx",
      },
      {
        path: "components/layout/sidebar/inc/sidebar-nav-main.tsx",
        type: "registry:component",
        target: "src/components/layout/sidebar/inc/sidebar-nav-main.tsx",
      },
      {
        path: "components/layout/sidebar/inc/sidebar-nav-secondary.tsx",
        type: "registry:component",
        target: "src/components/layout/sidebar/inc/sidebar-nav-secondary.tsx",
      },
      {
        path: "components/layout/sidebar/inc/sidebar-nav-user.tsx",
        type: "registry:component",
        target: "src/components/layout/sidebar/inc/sidebar-nav-user.tsx",
      },
      {
        path: "components/layout/sidebar/admin-sidebar.tsx",
        type: "registry:component",
        target: "src/components/layout/sidebar/admin-sidebar.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/sidebar#admin-sidebar",
  },
  /**
   * Componente `admin-layout`:
   * Um componente de admin-layout.
   */
  {
    name: "admin-layout",
    type: "registry:component",
    description: "A admin-layout component.",
    title: "admin-layout",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "sidebar",
      "sonner",
      "<registryBaseUrl>/tailwind-indicator.json",
      "<registryBaseUrl>/admin-navbar.json",
      "<registryBaseUrl>/admin-sidebar.json",
    ],
    files: [
      {
        path: "components/layout/admin-layout/index.tsx",
        type: "registry:component",
        target: "src/components/layout/admin-layout/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/admin-layout",
  },
  /**
   * Componente `alert-error`:
   * Um componente de alert-error.
   */
  {
    name: "alert-error",
    type: "registry:component",
    description: "A alert-error component.",
    title: "alert-error",
    author: "<author> <<authorUrl>>",
    registryDependencies: ["alert"],
    files: [
      {
        path: "components/layout/alert/alert-error.tsx",
        type: "registry:component",
        target: "src/components/layout/alert/alert-error.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/alert#alert-error",
  },
  /**
   * Componente `alert-info`:
   * Um componente de alert-info.
   */
  {
    name: "alert-info",
    type: "registry:component",
    description: "A alert-info component.",
    title: "alert-info",
    author: "<author> <<authorUrl>>",
    registryDependencies: ["alert"],
    files: [
      {
        path: "components/layout/alert/alert-info.tsx",
        type: "registry:component",
        target: "src/components/layout/alert/alert-info.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/alert#alert-info",
  },
  /**
   * Componente `alert-success`:
   * Um componente de alert-success.
   */
  {
    name: "alert-success",
    type: "registry:component",
    description: "A alert-success component.",
    title: "alert-success",
    author: "<author> <<authorUrl>>",
    registryDependencies: ["alert"],
    files: [
      {
        path: "components/layout/alert/alert-success.tsx",
        type: "registry:component",
        target: "src/components/layout/alert/alert-success.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/alert#alert-success",
  },
  /**
   * Componente `alert-warn`:
   * Um componente de alert-warn.
   */
  {
    name: "alert-warn",
    type: "registry:component",
    description: "A alert-warn component.",
    title: "alert-warn",
    author: "<author> <<authorUrl>>",
    registryDependencies: ["alert"],
    files: [
      {
        path: "components/layout/alert/alert-warn.tsx",
        type: "registry:component",
        target: "src/components/layout/alert/alert-warn.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/alert#alert-warn",
  },
  /**
   * Componente `banner`:
   * Um componente de banner.
   */
  {
    name: "banner",
    type: "registry:component",
    description: "A banner component.",
    title: "banner",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "badge",
      "button",
      "<registryBaseUrl>/container.json",
    ],
    files: [
      {
        path: "components/layout/banner/index.tsx",
        type: "registry:component",
        target: "src/components/layout/banner/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/banner",
  },
  /**
   * Componente `container`:
   * Um componente de container.
   */
  {
    name: "container",
    type: "registry:component",
    description: "A container component.",
    title: "container",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/container/index.tsx",
        type: "registry:component",
        target: "src/components/layout/container/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/container",
  },
  /**
   * Componente `footer-01`:
   * Um componente de footer-01.
   */
  {
    name: "footer-01",
    type: "registry:component",
    description: "A footer-01 component.",
    title: "footer",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "<registryBaseUrl>/container.json",
      "<registryBaseUrl>/social-icon-link.json",
    ],
    files: [
      {
        path: "components/layout/footer/footer-01.tsx",
        type: "registry:component",
        target: "src/components/layout/footer/footer-01.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/footer#footer-01",
  },
  /**
   * Componente `hero-01`:
   * Um componente de hero-01.
   */
  {
    name: "hero-01",
    type: "registry:component",
    description: "A hero-01 component.",
    title: "hero",
    author: "<author> <<authorUrl>>",
    registryDependencies: ["<registryBaseUrl>/banner.json"],
    files: [
      {
        path: "components/layout/hero/hero-01.tsx",
        type: "registry:component",
        target: "src/components/layout/hero/hero-01.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/hero#hero-01",
  },
  /**
   * Componente `icons`:
   * Um componente de icons.
   */
  {
    name: "icons",
    type: "registry:component",
    description: "A icons component.",
    title: "icons",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/icons/index.tsx",
        type: "registry:component",
        target: "src/components/layout/icons/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/icons",
  },
  /**
   * Componente `loading-spinner`:
   * Um componente de loading-spinner.
   */
  {
    name: "loading-spinner",
    type: "registry:component",
    description: "A loading-spinner component.",
    title: "loading-spinner",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/loading/loading-spinner.tsx",
        type: "registry:component",
        target: "src/components/layout/loading/loading-spinner.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/loading#loading-spinner",
  },
  /**
   * Componente `logo-adminsys`:
   * Um componente de logo-adminsys.
   */
  {
    name: "logo-adminsys",
    type: "registry:component",
    description: "A logo-adminsys component.",
    title: "logo-adminsys",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/logo/logo-adminsys.tsx",
        type: "registry:component",
        target: "src/components/layout/logo/logo-adminsys.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/logo#logo-adminsys",
  },
  /**
   * Componente `logo-docsys`:
   * Um componente de logo-docsys.
   */
  {
    name: "logo-docsys",
    type: "registry:component",
    description: "A logo-docsys component.",
    title: "logo-docsys",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/logo/logo-docsys.tsx",
        type: "registry:component",
        target: "src/components/layout/logo/logo-docsys.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/logo#logo-docsys",
  },
  /**
   * Componente `logo-sitesys`:
   * Um componente de logo-sitesys.
   */
  {
    name: "logo-sitesys",
    type: "registry:component",
    description: "A logo-sitesys component.",
    title: "logo-sitesys",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/logo/logo-sitesys.tsx",
        type: "registry:component",
        target: "src/components/layout/logo/logo-sitesys.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/logo#logo-sitesys",
  },
  /**
   * Componente `navbar-01`:
   * Um componente de navbar-01.
   */
  {
    name: "navbar-01",
    type: "registry:component",
    description: "A navbar-01 component.",
    title: "navbar-01",
    author: "<author> <<authorUrl>>",
    registryDependencies: [
      "button",
      "sidebar",
      "navigation-menu",
      "<registryBaseUrl>/container.json",
    ],
    files: [
      {
        path: "components/layout/navbar/inc/nav-main.tsx",
        type: "registry:component",
        target: "src/components/layout/navbar/inc/nav-main.tsx",
      },
      {
        path: "components/layout/navbar/inc/nav-mobile.tsx",
        type: "registry:component",
        target: "src/components/layout/navbar/inc/nav-mobile.tsx",
      },
      {
        path: "components/layout/navbar/inc/nav-system.tsx",
        type: "registry:component",
        target: "src/components/layout/navbar/inc/nav-system.tsx",
      },
      {
        path: "components/layout/navbar/types/index.ts",
        type: "registry:component",
        target: "src/components/layout/navbar/types/index.ts",
      },
      {
        path: "components/layout/navbar/navbar-01.tsx",
        type: "registry:component",
        target: "src/components/layout/navbar/navbar-01.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/logo#navbar-01",
  },
  /**
   * Componente `not-found`:
   * Um componente de not-found.
   */
  {
    name: "not-found",
    type: "registry:component",
    description: "A not-found component.",
    title: "not-found",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/not-found/index.tsx",
        type: "registry:component",
        target: "src/components/layout/not-found/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/not-found",
  },
  /**
   * Componente `theme-provider`:
   * Um componente de theme-provider.
   */
  {
    name: "theme-provider",
    type: "registry:component",
    description: "A theme-provider component.",
    title: "theme-provider",
    author: "<author> <<authorUrl>>",
    dependencies: ["next-themes"],
    files: [
      {
        path: "components/layout/provider/theme-provider.tsx",
        type: "registry:component",
        target: "src/components/layout/provider/theme-provider.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/provider#theme-provider",
  },
  /**
   * Componente `site-layout`:
   * Um componente de site-layout.
   */
  {
    name: "site-layout",
    type: "registry:component",
    description: "A site-layout component.",
    title: "site-layout",
    author: "<author> <<authorUrl>>",
    dependencies: ["next-themes"],
    registryDependencies: [
      "sidebar",
      "sonner",
      "<registryBaseUrl>/tailwind-indicator.json",
      "<registryBaseUrl>/navbar-01.json",
      "<registryBaseUrl>/footer-01.json",
    ],
    files: [
      {
        path: "components/layout/site-layout/index.tsx",
        type: "registry:component",
        target: "src/components/layout/site-layout/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/site-layout",
  },
  /**
   * Componente `social-icon-link`:
   * Um componente de social-icon-link.
   */
  {
    name: "social-icon-link",
    type: "registry:component",
    description: "A social-icon-link component.",
    title: "social-icon-link",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/social/social-icon-link.tsx",
        type: "registry:component",
        target: "src/components/layout/social/social-icon-link.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/social#social-icon-link",
  },
  /**
   * Componente `tailwind-indicator`:
   * Um indicador visual para ambientes de desenvolvimento que mostra o breakpoint atual do Tailwind CSS.
   */
  {
    name: "tailwind-indicator",
    type: "registry:component",
    description: "A tailwind-indicator component.",
    title: "tailwind-indicator",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/dev/tailwind-indicator.tsx",
        type: "registry:component",
        target: "src/components/dev/tailwind-indicator.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/dev/tailwind-indicator",
  },
  /**
   * Componente `theme-toggle`:
   * Um botão para alternar entre os temas claro, escuro e do sistema, utilizando `next-themes` e Tailwind CSS.
   */
  {
    name: "theme-toggle",
    type: "registry:component",
    description:
      "A theme-toggle component with next-themes and Tailwind CSS, supporting system, light, and dark modes.",
    title: "theme-toggle",
    author: "<author> <<authorUrl>>",
    dependencies: ["next-themes"],
    files: [
      {
        path: "components/layout/toggle/theme-toggle.tsx",
        type: "registry:component",
        target: "src/components/layout/toggle/theme-toggle.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/toggle#toggle-theme",
  },
  /**
   * Componente `toggle-theme`:
   * Similar ao `theme-toggle`, oferece funcionalidade de alternância de tema com um design ligeiramente diferente.
   */
  {
    name: "toggle-theme",
    type: "registry:component",
    description:
      "A toggle-theme component with next-themes and Tailwind CSS, supporting system, light, and dark modes.",
    title: "toggle-theme",
    author: "<author> <<authorUrl>>",
    dependencies: ["next-themes"],
    registryDependencies: ["button"],
    files: [
      {
        path: "components/layout/toggle/toggle-theme.tsx",
        type: "registry:component",
        target: "src/components/layout/toggle/toggle-theme.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/toggle#toggle-theme",
  },
  /**
   * Componente `typography`:
   * Um componente de typography.
   */
  {
    name: "typography",
    type: "registry:component",
    description: "A typography component.",
    title: "typography",
    author: "<author> <<authorUrl>>",
    files: [
      {
        path: "components/layout/typography/index.tsx",
        type: "registry:component",
        target: "src/components/layout/typography/index.tsx",
      },
    ],
    docs: "<baseUrl>/docs/components/layout/typography",
  },
]
