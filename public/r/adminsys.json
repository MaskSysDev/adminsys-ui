{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "adminsys",
  "type": "registry:block",
  "dependencies": [
    "zod"
  ],
  "registryDependencies": [
    "http://localhost:3000/r/admin-layout.json",
    "http://localhost:3000/r/typography.json",
    "http://localhost:3000/r/site-layout.json",
    "http://localhost:3000/r/hero-01.json",
    "http://localhost:3000/r/icons.json",
    "http://localhost:3000/r/logo-adminsys.json",
    "http://localhost:3000/r/metadata.json"
  ],
  "files": [
    {
      "path": "src/registry/examples/adminsys/app/layout.tsx",
      "content": "import type { Metadata, Viewport } from \"next\"\n\nimport { ThemeProvider } from \"@/components/layout/provider/theme-provider\"\n\nimport { geistMono, geistSans } from \"@/lib/fonts\"\nimport { cn } from \"@/lib/utils\"\n\nimport { siteConfig } from \"@/config/site-config\"\n\nimport \"@/styles/globals.css\"\n\nimport { createMetadata } from \"@/registry/lib/metadata\"\n\nexport const metadata: Metadata = createMetadata({\n  // URL base para geração de links absolutos em Open Graph e Twitter\n  metadataBase: new URL(siteConfig.url || \"http://localhost:3000\"),\n\n  // Configuração do título da página\n  title: {\n    default: siteConfig.name || \"AdminSys\", // Título padrão da aplicação\n    template: `%s - ${siteConfig.name || \"AdminSys\"}`, // Template para títulos de páginas específicas\n  },\n\n  // Descrição da aplicação para SEO\n  description:\n    siteConfig.description ||\n    \"React App with Next.js, Typescript, TailwindCSS, Shadcn, Biome, Husky, Commitlint and more.\",\n\n  // Palavras-chave para SEO\n  keywords: siteConfig.keywords || [\n    \"React\",\n    \"Next.js\",\n    \"TypeScript\",\n    \"TailwindCSS\",\n    \"Shadcn\",\n    \"BiomeJs\",\n    \"Husky\",\n    \"Commitlint\",\n  ],\n\n  // Informações dos autores do projeto\n  authors: [\n    {\n      name: siteConfig.author || \"MaskSysDev\", // Nome do autor\n      url: siteConfig.authorUrl || \"https://github.com/MaskSysDev\", // URL do autor\n    },\n  ],\n\n  // Informações de criação e publicação\n  creator: siteConfig.creator || \"Mask\", // Criador do projeto\n  publisher: siteConfig.publisher || \"MaskSysDev\", // Publicador do projeto\n\n  // Configurações de robots para controle de indexação\n  robots: {\n    follow: true, // Seguir links automaticamente\n    index: true, // Indexar a página\n    nocache: false, // Permitir cache da página\n    googleBot: {\n      index: true, // Google deve indexar\n      follow: true, // Google deve seguir links\n      noimageindex: false, // Permitir indexação de imagens\n      \"max-video-preview\": -1, // Permitir preview completo de vídeos\n      \"max-image-preview\": \"large\", // Permitir preview grande de imagens\n      \"max-snippet\": -1, // Permitir snippet completo\n    },\n  },\n\n  // Configurações de detecção automática de formato\n  formatDetection: {\n    email: false, // Não detectar emails automaticamente\n    address: false, // Não detectar endereços automaticamente\n    telephone: false, // Não detectar telefones automaticamente\n  },\n\n  // Configuração de ícones e favicons\n  icons: {\n    icon: [\n      { url: siteConfig.favicon || \"/favicon.ico\", sizes: \"any\" }, // Favicon principal\n      {\n        url: siteConfig.favicon16x16 || \"/assets/images/icon/icon-16x16.png\",\n        sizes: \"16x16\",\n        type: \"image/png\",\n      }, // Favicon 16x16\n      {\n        url: siteConfig.favicon32x32 || \"/assets/images/icon/icon-32x32.png\",\n        sizes: \"32x32\",\n        type: \"image/png\",\n      }, // Favicon 32x32\n    ],\n    apple: [\n      {\n        url:\n          siteConfig.favicon180x180 || \"/assets/images/icon/icon-180x180.png\",\n        sizes: \"180x180\",\n        type: \"image/png\",\n      }, // Ícone para Apple\n    ],\n    other: [\n      {\n        rel: \"mask-icon\",\n        url: \"/assets/images/icon/icon.svg\",\n        color: \"#000000\",\n      }, // Ícone SVG para Safari\n    ],\n  },\n\n  // Configuração do manifesto para PWA\n  manifest: siteConfig.manifest || \"/sitemap.xml\", // Caminho do manifesto PWA\n\n  // Configuração do Open Graph para redes sociais\n  openGraph: {\n    type: \"website\", // Tipo de conteúdo\n    title: siteConfig.name || \"AdminSys\", // Título para compartilhamento\n    locale: siteConfig.locale || \"en-US\", // Localização do conteúdo\n    description:\n      siteConfig.description ||\n      \"React App with Next.js, Typescript, TailwindCSS, Shadcn, Biome, Husky, Commitlint and more.\", // Descrição para compartilhamento\n    url: siteConfig.url || \"https://adminsys-started.vercel.app\", // URL da página\n    siteName: siteConfig.name || \"AdminSys\", // Nome do site\n    images: [\n      // Imagens para compartilhamento em diferentes tamanhos\n      {\n        url:\n          siteConfig.favicon180x180 || \"/assets/images/icon/icon-180x180.png\", // Imagem 180x180\n        width: 180,\n        height: 180,\n        alt: `${siteConfig.name || \"AdminSys\"} - Logo`, // Alt text para acessibilidade\n      },\n      {\n        url:\n          siteConfig.favicon192x192 || \"/assets/images/icon/icon-192x192.png\", // Imagem 192x192\n        width: 192,\n        height: 192,\n        alt: `${siteConfig.name || \"AdminSys\"} - Logo`, // Alt text para acessibilidade\n      },\n      {\n        url:\n          siteConfig.favicon512x512 || \"/assets/images/icon/icon-512x512.png\", // Imagem 512x512\n        width: 512,\n        height: 512,\n        alt: `${siteConfig.name || \"AdminSys\"} - Logo`, // Alt text para acessibilidade\n      },\n    ],\n  },\n\n  // Configuração específica para Twitter\n  twitter: {\n    card: \"summary_large_image\", // Tipo de card do Twitter\n    title: siteConfig.name || \"AdminSys\", // Título para Twitter\n    description:\n      siteConfig.description ||\n      \"React App with Next.js, Typescript, TailwindCSS, Shadcn, Biome, Husky, Commitlint and more.\", // Descrição para Twitter\n    images: [\n      siteConfig.favicon512x512 || \"/assets/images/icon/icon-512x512.png\", // Imagem para Twitter\n    ],\n    creator: siteConfig.creator || \"Mask\", // Criador do conteúdo\n    site: siteConfig.twitterHandle || \"@adminsys\", // Handle do Twitter do site\n  },\n})\n\nexport const viewport: Viewport = {\n  // Configuração de largura e altura do viewport\n  width: \"device-width\", // Largura baseada no dispositivo\n  height: \"device-height\", // Altura baseada no dispositivo\n\n  // Configuração de escala e zoom\n  initialScale: 1, // Escala inicial\n  maximumScale: 5, // Escala máxima permitida\n  minimumScale: 1, // Escala mínima permitida\n  userScalable: true, // Permite zoom do usuário\n\n  // Configuração de cores de tema para diferentes esquemas\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"#ffffff\" }, // Cor para modo claro\n    { media: \"(prefers-color-scheme: dark)\", color: \"#000000\" }, // Cor para modo escuro\n  ],\n\n  // Configurações adicionais de viewport\n  viewportFit: \"cover\", // Ajuste do viewport para cobrir toda a tela\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html\n      className=\"scroll-smooth\"\n      data-scroll-behavior=\"smooth\"\n      dir=\"ltr\"\n      lang={siteConfig.locale || \"en-US\"}\n      suppressHydrationWarning\n    >\n      <body\n        className={cn(\n          geistSans.variable,\n          geistMono.variable,\n          \"font-sans antialiased\"\n        )}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          disableTransitionOnChange\n          enableSystem\n        >\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/layout.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/not-found.tsx",
      "content": "import type { Metadata } from \"next\"\n\nimport { NotFound } from \"@/components/layout/not-found\"\n\nexport const metadata: Metadata = {\n  title: \"404: Page not found\",\n  description: \"The page you are looking for could not be found.\",\n  robots: { index: false, follow: false },\n}\n\nexport default function NotFoundPage() {\n  return (\n    <NotFound\n      description=\"The page you are looking for could not be found.\"\n      labelGoBack=\"Back\"\n      title=\"This page does not exist\"\n    />\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/not-found.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/sitemap.ts",
      "content": "import type { MetadataRoute } from \"next\"\n\nimport { siteConfig } from \"@/config/site-config\"\n\nexport const revalidate = false\n\n// biome-ignore lint/suspicious/useAwait: This async function lacks an await expression.\nexport default async function sitemap(): Promise<MetadataRoute.Sitemap> {\n  const url = (path: string): string => new URL(path, siteConfig.url).toString()\n\n  return [\n    {\n      url: url(\"/\"),\n      changeFrequency: \"monthly\",\n      priority: 1,\n    },\n  ]\n}\n",
      "type": "registry:file",
      "target": "src/app/sitemap.ts"
    },
    {
      "path": "src/registry/examples/adminsys/app/(home)/layout.tsx",
      "content": "import { SiteLayout } from \"@/components/layout/site-layout\"\n\nimport { footer01, navbar01 } from \"@/config/site-config\"\n\nexport default function HomeLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <SiteLayout footer={footer01} navbar={navbar01}>\n      {children}\n    </SiteLayout>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/(home)/layout.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/(home)/page.tsx",
      "content": "import { Hero01 } from \"@/components/layout/hero/hero-01\"\n\nimport { hero01 } from \"@/config/site-config\"\n\nexport default function Home() {\n  return (\n    <section id=\"hero\">\n      <Hero01 {...hero01} />\n    </section>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/(home)/page.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/config/types/index.ts",
      "content": "import type { HTMLAttributes, JSX } from \"react\"\n\nexport type SiteMeta = {\n  name: string\n  description?: string\n  url?: string\n  locale?: string\n  keywords?: string[]\n  twitterHandle?: string\n}\n\nexport type Assets = {\n  favicon: string\n  favicon16x16: string\n  favicon32x32: string\n  favicon180x180: string\n  favicon192x192: string\n  favicon512x512: string\n  logo?: string\n  logoLight?: string\n  logoDark?: string\n  manifest?: string\n}\n\nexport type SocialLink = {\n  label: string\n  href: string\n  icon: (props: HTMLAttributes<SVGElement>) => JSX.Element\n}\n\nexport type ContactInfo = {\n  contactEmail: string\n  supportEmail: string\n}\n\nexport type AuthorInfo = {\n  author: string\n  authorUrl: string\n  creator: string\n  publisher: string\n  projectUrl: string\n}\n\nexport interface SiteConfig extends SiteMeta, Assets, ContactInfo, AuthorInfo {\n  ogImage?: string\n  authors?: { name: string; url: string }[]\n\n  project?: {\n    url?: string\n    author?: string\n    authorUrl?: string\n  }\n  docsRepositoryBase?: string\n  socialLinks?: SocialLink[]\n}\n",
      "type": "registry:file",
      "target": "src/config/types/index.ts"
    },
    {
      "path": "src/registry/examples/adminsys/config/validation/env.schema.ts",
      "content": "import { z } from \"zod\"\n\nexport const envSchema = z.object({\n  NODE_ENV: z\n    .enum([\"development\", \"test\", \"production\"])\n    .default(\"development\"),\n  NEXT_PUBLIC_APP_URL: z.url().default(\"http://localhost:3000\"),\n})\n",
      "type": "registry:file",
      "target": "src/config/validation/env.schema.ts"
    },
    {
      "path": "src/registry/examples/adminsys/config/validation/site-config.schema.ts",
      "content": "import { z } from \"zod\"\n\nexport const siteConfigSchema = z.object({\n  name: z.string(),\n  description: z.string().optional(),\n  url: z.url().optional(),\n  locale: z.string().optional(),\n  keywords: z.array(z.string()).optional(),\n  twitterHandle: z.string().optional(),\n  favicon: z.string(),\n  favicon16x16: z.string(),\n  favicon32x32: z.string(),\n  favicon180x180: z.string(),\n  favicon192x192: z.string(),\n  favicon512x512: z.string(),\n  logo: z.string().optional(),\n  logoLight: z.string().optional(),\n  logoDark: z.string().optional(),\n  manifest: z.string().optional(),\n  author: z.string(),\n  authorUrl: z.url(),\n  creator: z.string(),\n  publisher: z.string(),\n  projectUrl: z.url(),\n  contactEmail: z.email(),\n  supportEmail: z.email(),\n  project: z\n    .object({\n      url: z.url().optional(),\n      author: z.string().optional(),\n      authorUrl: z.url().optional(),\n    })\n    .optional(),\n  docsRepositoryBase: z.url().optional(),\n  socialLinks: z\n    .array(\n      z.object({\n        label: z.string(),\n        href: z.url(),\n        icon: z.unknown(),\n      })\n    )\n    .optional(),\n})\n",
      "type": "registry:file",
      "target": "src/config/validation/site-config.schema.ts"
    },
    {
      "path": "src/registry/examples/adminsys/config/env.ts",
      "content": "import { envSchema } from \"@/config/validation/env.schema\"\n\nexport const env = envSchema.parse({\n  NODE_ENV: process.env.NODE_ENV,\n  NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,\n})\n",
      "type": "registry:file",
      "target": "src/config/env.ts"
    },
    {
      "path": "src/registry/examples/adminsys/config/site-config.tsx",
      "content": "import { Icons } from \"@/components/layout/icons\"\n\nimport { env } from \"@/config/env\"\nimport type {\n  Assets,\n  AuthorInfo,\n  ContactInfo,\n  SiteConfig,\n  SiteMeta,\n  SocialLink,\n} from \"@/config/types\"\nimport { siteConfigSchema } from \"@/config/validation/site-config.schema\"\nimport { Logo } from \"@/registry/components/layout/logo/logo-adminsys\"\n\n/**\n * Metadados principais do site\n *\n * Responsabilidades:\n * - Definir informações básicas do site para SEO e metadados\n * - Centralizar dados essenciais como nome, descrição e URL\n *\n * Retorno:\n * - Objeto contendo os metadados do site\n */\nconst siteMeta: SiteMeta = {\n  name: \"AdminSys Started\",\n  description:\n    \"React App with Next.js, Typescript, TailwindCSS, Shadcn, Biome, Husky, Commitlint and more.\",\n  url: env.NEXT_PUBLIC_APP_URL,\n  locale: \"en-US\",\n  keywords: [\n    \"React\",\n    \"Next.js\",\n    \"TypeScript\",\n    \"TailwindCSS\",\n    \"Shadcn\",\n    \"BiomeJs\",\n    \"Husky\",\n    \"Commitlint\",\n  ],\n  twitterHandle: \"@adminsys\",\n}\n\n/**\n * Caminhos dos favicons e logos do site\n *\n * Responsabilidades:\n * - Centralizar caminhos de imagens globais\n * - Facilitar manutenção de assets visuais\n *\n * Retorno:\n * - Objeto contendo os caminhos de todos os assets\n */\nconst assets: Assets = {\n  favicon: \"/favicon.ico\",\n  favicon16x16: \"/assets/images/icon/icon-16x16.png\",\n  favicon32x32: \"/assets/images/icon/icon-32x32.png\",\n  favicon180x180: \"/assets/images/icon/icon-180x180.png\",\n  favicon192x192: \"/assets/images/icon/icon-192x192.png\",\n  favicon512x512: \"/assets/images/icon/icon-512x512.png\",\n  logo: \"/assets/images/logo/logo-dark.png\",\n  logoLight: \"/assets/images/logo/logo-light.png\",\n  logoDark: \"/assets/images/logo/logo-dark.png\",\n  manifest: \"/sitemap.xml\",\n}\n\n/**\n * Links de redes sociais do projeto\n *\n * Responsabilidades:\n * - Centralizar URLs de redes sociais\n * - Facilitar atualização de links sociais\n *\n * Retorno:\n * - Array de objetos com links de redes sociais\n */\nconst socialLinks: SocialLink[] = [\n  {\n    label: \"Facebook\",\n    href: \"https://www.facebook.com/\",\n    icon: Icons.facebook,\n  },\n  {\n    label: \"Instagram\",\n    href: \"https://www.instagram.com/\",\n    icon: Icons.instagram,\n  },\n  {\n    label: \"Youtube\",\n    href: \"https://www.youtube.com/\",\n    icon: Icons.youtube,\n  },\n]\n\n/**\n * Informações de contato do site\n *\n * Responsabilidades:\n * - Centralizar emails de contato e suporte\n * - Facilitar comunicação com usuários\n *\n * Retorno:\n * - Objeto contendo informações de contato\n */\nconst contactInfo: ContactInfo = {\n  contactEmail: \"contato@adminsys.com.br\",\n  supportEmail: \"suporte@adminsys.com.br\",\n}\n\n/**\n * Informações do autor e do projeto\n *\n * Responsabilidades:\n * - Centralizar dados do autor, criador, publicador e repositório\n * - Facilitar atribuição e rastreamento do projeto\n *\n * Retorno:\n * - Objeto contendo informações do autor e do projeto\n */\nconst authorInfo: AuthorInfo = {\n  author: \"MaskSysDev\",\n  authorUrl: \"https://github.com/MaskSysDev\",\n  creator: \"Mask\",\n  publisher: \"MaskSysDev\",\n  projectUrl: \"https://github.com/MaskSysDev/adminsys-started\",\n}\n\n/**\n * Objeto de configuração principal do site\n *\n * Responsabilidades:\n * - Centralizar todas as configurações globais\n * - Fornecer dados para componentes e páginas\n * - Agregar todas as configurações em um único objeto\n *\n * Retorno:\n * - Objeto de configuração global do site\n */\nexport const siteConfig: SiteConfig = {\n  ...siteMeta,\n  ...assets,\n  ...authorInfo,\n  ...contactInfo,\n  project: {\n    url: authorInfo.projectUrl,\n    author: authorInfo.author,\n    authorUrl: authorInfo.authorUrl,\n  },\n  docsRepositoryBase: authorInfo.projectUrl,\n  socialLinks,\n}\n\n// Validate at runtime in non-production to catch issues early\nif (process.env.NODE_ENV !== \"production\") {\n  siteConfigSchema.parse(siteConfig)\n}\n\n/**\n * Configuração da barra de navegação principal (Navbar01)\n *\n * Responsabilidades:\n * - Definir o conteúdo e a aparência da barra de navegação.\n * - Centralizar os itens de menu, logo e comportamento responsivo.\n *\n * Retorno:\n * - Objeto contendo as propriedades da barra de navegação.\n */\nexport const navbar01 = {\n  label: \"Menu\",\n  logo: <Logo.Theme />,\n  logoIcon: <Logo.Icon className=\"size-6\" />,\n  logoResponsive: true,\n  position: \"end\",\n  navItems: [\n    {\n      label: \"Home\",\n      href: \"/\",\n    },\n    {\n      label: \"Features\",\n      href: \"/#features\",\n    },\n    {\n      label: \"Dashboard\",\n      href: \"/admin/dashboard\",\n    },\n  ],\n}\n\n/**\n * Configuração do rodapé principal (Footer01)\n *\n * Responsabilidades:\n * - Definir o conteúdo do rodapé, como nome, autor e links sociais.\n * - Centralizar informações exibidas na parte inferior do site.\n *\n * Retorno:\n * - Objeto contendo as propriedades do rodapé.\n */\nexport const footer01 = {\n  title: \"AdminSys Started\",\n  author: \"MaskSysDev\",\n  authorUrl: \"https://github.com/MaskSysDev\",\n  socialLinks: [\n    {\n      label: \"Facebook\",\n      icon: Icons.facebook,\n      href: \"/\",\n    },\n    {\n      label: \"Instagram\",\n      icon: Icons.instagram,\n      href: \"/\",\n    },\n    {\n      label: \"Youtube\",\n      icon: Icons.youtube,\n      href: \"/\",\n    },\n  ],\n}\n\n/**\n * Configuração da seção de herói (Hero01)\n *\n * Responsabilidades:\n * - Definir o conteúdo principal da seção de destaque (hero).\n * - Centralizar títulos, descrições e ações (botões).\n *\n * Retorno:\n * - Objeto contendo as propriedades da seção de herói.\n */\nexport const hero01 = {\n  title: \"AdminSys Started Boilerplate\",\n  subTitle: \"Template\",\n  subTitleColor: \"Admin\",\n  description:\n    \"React App with Next.js, Typescript, TailwindCSS, Shadcn, Biome, Husky, Commitlint and more.\",\n  size: \"90\",\n  gradientTop: true,\n  gradientBottom: true,\n  actions: {\n    action01: {\n      label: \"Get Started\",\n      href: \"/admin/dashboard\",\n    },\n    action02: {\n      label: \"GitHub\",\n      href: \"https://github.com/MaskSysDev/adminsys-started\",\n    },\n  },\n}\n\n/**\n * Configuração da seção de funcionalidades (FeaturesSection)\n *\n * Responsabilidades:\n * - Definir o conteúdo da seção que destaca as funcionalidades ou tecnologias.\n * - Centralizar o título, a descrição e a lista de features.\n *\n * Retorno:\n * - Objeto contendo as propriedades da seção de funcionalidades.\n */\nexport const featuresSection = {\n  title: \"Technologies that enhance the project\",\n  description:\n    \"A modern, productive, and reliable stack to accelerate development and ensure quality from start to finish.\",\n  features: [\n    {\n      icon: Icons.react,\n      title: \"React\",\n      description: \"Declarative library for building modern user interfaces.\",\n    },\n    {\n      icon: Icons.nextJS,\n      title: \"Next.js\",\n      description:\n        \"Production-grade React framework with SSR, SSG, and API Routes.\",\n    },\n    {\n      icon: Icons.typescript,\n      title: \"TypeScript\",\n      description:\n        \"Advanced static typing for safer and more productive development.\",\n    },\n    {\n      icon: Icons.biome,\n      title: \"Biome\",\n      description:\n        \"Automatic code formatter to keep style consistent across the project.\",\n    },\n    {\n      icon: Icons.tailwindCSS,\n      title: \"TailwindCSS\",\n      description:\n        \"Fast and responsive styling with highly customizable CSS utilities.\",\n    },\n    {\n      icon: Icons.shadcn,\n      title: \"Shadcn UI\",\n      description: \"Modern, accessible, and production-ready UI components.\",\n    },\n  ],\n}\n",
      "type": "registry:file",
      "target": "src/config/site-config.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/(admin)/admin/layout.tsx",
      "content": "import { AdminLayout } from \"@/components/layout/admin-layout\"\n\nexport default function Layout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return <AdminLayout>{children}</AdminLayout>\n}\n",
      "type": "registry:file",
      "target": "src/app/(admin)/admin/layout.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/(admin)/admin/dashboard/page.tsx",
      "content": "import { Container } from \"@/components/layout/container\"\nimport { Typography } from \"@/components/layout/typography\"\n\nexport default function Page() {\n  return (\n    <Container size=\"2xl\">\n      <Typography.H1 className=\"mb-4 text-start\">Dashboard</Typography.H1>\n      <Typography.Lead>Dashboard Page.</Typography.Lead>\n    </Container>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/(admin)/admin/dashboard/page.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/(admin)/admin/folder-01/submenu-01/page.tsx",
      "content": "import { Container } from \"@/components/layout/container\"\nimport { Typography } from \"@/components/layout/typography\"\n\nexport default function Page() {\n  return (\n    <Container size=\"2xl\">\n      <Typography.H1 className=\"mb-4 text-start\">Submenu 01</Typography.H1>\n      <Typography.Lead>Submenu 01 Page.</Typography.Lead>\n    </Container>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/(admin)/admin/folder-01/submenu-01/page.tsx"
    },
    {
      "path": "src/registry/examples/adminsys/app/(admin)/admin/folder-01/submenu-02/page.tsx",
      "content": "import { Container } from \"@/components/layout/container\"\nimport { Typography } from \"@/components/layout/typography\"\n\nexport default function Page() {\n  return (\n    <Container size=\"2xl\">\n      <Typography.H1 className=\"mb-4 text-start\">Submenu 02</Typography.H1>\n      <Typography.Lead>Submenu 02 Page.</Typography.Lead>\n    </Container>\n  )\n}\n",
      "type": "registry:file",
      "target": "src/app/(admin)/admin/folder-01/submenu-02/page.tsx"
    }
  ],
  "envVars": {
    "NEXT_PUBLIC_APP_URL": "http://localhost:3000"
  }
}