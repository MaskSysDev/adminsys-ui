{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown-user",
  "type": "registry:component",
  "title": "dropdown-user",
  "author": "MaskSysDev <https://github.com/MaskSysDev>",
  "description": "A dropdown-user component.",
  "files": [
    {
      "path": "src/registry/components/auth/dropdown/dropdown-user.tsx",
      "content": "\"use client\"\n\nimport { LogOut, User2Icon } from \"lucide-react\"\nimport Link from \"next/link\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nexport type DropdownUserProps = {\n  user: {\n    id: string\n    name: string\n    email: string\n    image: string | null | undefined\n    lastName: string\n    role: string\n  }\n}\n\nexport function DropdownUser({ user }: DropdownUserProps) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          className=\"cursor-pointer rounded-full\"\n          size=\"icon\"\n          variant=\"secondary\"\n        >\n          <Avatar className=\"h-8 w-8 rounded-full\">\n            {user.image && (\n              <AvatarImage\n                alt={user.name}\n                className=\"object-cover object-center\"\n                src={user.image}\n              />\n            )}\n            <AvatarFallback className=\"rounded-full\">\n              <User2Icon className=\"text-muted-foreground\" />\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"sr-only\">User Menu</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        <DropdownMenuLabel className=\"p-0 font-normal\">\n          <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n            <Avatar className=\"h-8 w-8 rounded-lg\">\n              {user.image && <AvatarImage alt={user.name} src={user.image} />}\n              <AvatarFallback className=\"rounded-lg\">\n                <User2Icon className=\"text-muted-foreground\" />\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"grid flex-1 text-left text-sm leading-tight\">\n              <span className=\"line-clamp-1 truncate font-medium\">\n                {user.name}\n              </span>\n              <span className=\"line-clamp-1 truncate text-muted-foreground text-xs\">\n                {user.email}\n              </span>\n            </div>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem\n            asChild\n            className=\"cursor-pointer transition-colors\"\n          >\n            <Link href={\"/settings/profile\"}>Profile</Link>\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            asChild\n            className=\"cursor-pointer transition-colors\"\n          >\n            <Link href={\"/settings/account\"}>Account</Link>\n          </DropdownMenuItem>\n          {user.role === \"admin\" && (\n            <DropdownMenuItem\n              asChild\n              className=\"cursor-pointer transition-colors\"\n            >\n              <Link href={\"/admin/dashboard\"}>Dashboard</Link>\n            </DropdownMenuItem>\n          )}\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"cursor-pointer transition-colors\">\n          <LogOut />\n          Log out\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/auth/dropdown/dropdown-user.tsx"
    }
  ],
  "docs": "http://localhost:3000/docs/components/auth/dropdown#dropdown-user"
}
