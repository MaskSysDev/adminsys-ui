{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-01",
  "type": "registry:component",
  "title": "navbar-01",
  "author": "MaskSysDev <https://github.com/MaskSysDev>",
  "description": "A navbar-01 component.",
  "registryDependencies": [
    "button",
    "sidebar",
    "navigation-menu",
    "http://localhost:3000/r/container.json"
  ],
  "files": [
    {
      "path": "src/registry/components/layout/navbar/inc/part/nav-item-link.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport {\n  NavigationMenuItem,\n  NavigationMenuLink,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\"\n\nimport type { NavItem } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\nexport function NavItemLink({ label = \"label\", href = \"#\" }: NavItem) {\n  const pathname = usePathname()\n\n  return (\n    <NavigationMenuItem>\n      <NavigationMenuLink\n        asChild\n        className={navigationMenuTriggerStyle({\n          className: cn(\n            \"h-8 bg-transparent px-3 text-base text-muted-foreground hover:bg-transparent hover:text-foreground focus:bg-transparent focus:text-foreground\",\n            pathname === href ? \"text-primary\" : null\n          ),\n        })}\n      >\n        <Link href={href}>{label}</Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/part/nav-item-link.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/part/nav-logo.tsx",
      "content": "import Link from \"next/link\"\nimport type { MouseEventHandler } from \"react\"\n\nimport type { Navbar } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\ntype NavLogoProps = {\n  navbar: Navbar\n  onClick?: MouseEventHandler<HTMLAnchorElement> | undefined\n}\n\nexport function NavLogo({ navbar, onClick }: NavLogoProps) {\n  return (\n    <Link\n      className=\"mr-4 flex items-center rounded-md outline-none transition-all focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\"\n      href=\"/\"\n      onClick={onClick}\n    >\n      <div className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none transition-all\">\n        <div className=\"flex shrink-0 items-center gap-2\">\n          {navbar.logoIcon && (\n            <div className=\"flex aspect-square items-center justify-center rounded-md bg-sidebar-primary p-1 text-sidebar-primary-foreground\">\n              {navbar.logoIcon}\n            </div>\n          )}\n\n          {navbar.logo && (\n            <span\n              className={cn(\n                \"shrink-0 font-bold text-3xl leading-normal\",\n                navbar.logoResponsive && navbar.logoIcon && \"hidden md:flex\"\n              )}\n            >\n              {navbar.logo}\n            </span>\n          )}\n        </div>\n      </div>\n      <span className=\"sr-only\">{navbar.label}</span>\n    </Link>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/part/nav-logo.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-main.tsx",
      "content": "\"use client\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuList,\n} from \"@/components/ui/navigation-menu\"\n\nimport { NavItemLink } from \"@/registry/components/layout/navbar/inc/part/nav-item-link\"\nimport type { NavItem } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\ntype NavMainProps = {\n  position?: string\n  items: NavItem[]\n  className?: string\n}\n\nexport function NavMain({ position, items, className }: NavMainProps) {\n  if (items.length === null) {\n    return null\n  }\n\n  return (\n    <div\n      className={cn(\n        \"hidden w-full items-center justify-start md:flex\",\n        {\n          \"justify-start\": position === \"start\" || position === \"left\",\n          \"justify-center\": position === \"center\",\n          \"justify-end\": position === \"end\" || position === \"right\",\n        },\n        className\n      )}\n    >\n      <NavigationMenu viewport={false}>\n        <NavigationMenuList>\n          {items.map((item) => (\n            <NavItemLink href={item.href} key={item.href} label={item.label} />\n          ))}\n        </NavigationMenuList>\n      </NavigationMenu>\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-main.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-mobile.tsx",
      "content": "\"use client\"\n\nimport { X } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\nimport type { Navbar, NavItem } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\nfunction NavMobileItem({ label = \"label\", href = \"#\" }: NavItem) {\n  const pathname = usePathname()\n  const { setOpenMobile } = useSidebar()\n\n  return (\n    <SidebarMenuItem>\n      <SidebarMenuButton\n        asChild\n        className={cn(\n          \"h-9 px-4 font-medium text-base text-muted-foreground\",\n          pathname === href ? \"bg-primary/10 text-primary\" : null\n        )}\n        onClick={() => setOpenMobile(false)}\n      >\n        <Link href={href}>\n          <span>{label}</span>\n        </Link>\n      </SidebarMenuButton>\n    </SidebarMenuItem>\n  )\n}\n\ninterface NavMobileProps extends React.ComponentProps<typeof Sidebar>, Navbar {}\n\nexport function NavMobile({\n  label,\n  logo,\n  logoIcon,\n  logoResponsive,\n  navItems,\n  ...props\n}: NavMobileProps) {\n  const { setOpenMobile } = useSidebar()\n\n  return (\n    <Sidebar {...props}>\n      <SidebarHeader className=\"relative\">\n        <div className=\"flex items-center gap-2 px-2 py-2\">\n          <Link\n            className=\"rounded-md outline-none transition-all focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\"\n            href=\"/\"\n            onClick={() => setOpenMobile(false)}\n          >\n            <div className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none transition-all\">\n              <div className=\"flex shrink-0 items-center gap-2\">\n                {logoIcon && (\n                  <div className=\"flex aspect-square items-center justify-center rounded-md bg-sidebar-primary p-1 text-sidebar-primary-foreground\">\n                    {logoIcon}\n                  </div>\n                )}\n\n                {logo && (\n                  <span\n                    className={cn(\n                      \"shrink-0 font-bold text-3xl leading-normal\",\n                      logoResponsive && logoIcon && \"hidden md:flex\"\n                    )}\n                  >\n                    {logo}\n                  </span>\n                )}\n              </div>\n            </div>\n          </Link>\n        </div>\n        <Button\n          className=\"absolute top-2 right-2 size-7 cursor-pointer text-muted-foreground\"\n          onClick={() => setOpenMobile(false)}\n          size=\"icon\"\n          variant=\"ghost\"\n        >\n          <X />\n        </Button>\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>{label}</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {navItems?.map((item) => (\n                <NavMobileItem\n                  href={item.href}\n                  key={item.href}\n                  label={item.label}\n                />\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-mobile.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-system.tsx",
      "content": "\"use client\"\n\nimport { Separator } from \"@/components/ui/separator\"\nimport { SidebarTrigger } from \"@/components/ui/sidebar\"\n\nimport { ToggleTheme } from \"@/registry/components/shared/toggle/toggle-theme\"\nimport { cn } from \"@/registry/lib/cn\"\n\nexport function NavSystem({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"flex h-5 items-center gap-1\", className)}>\n      <ToggleTheme className=\"flex\" />\n      <Separator className={cn(\"flex md:hidden\")} orientation=\"vertical\" />\n      <SidebarTrigger className=\"flex size-8 cursor-pointer text-muted-foreground md:hidden\" />\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-system.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/types/index.ts",
      "content": "import type { ReactNode } from \"react\"\n\nexport type NavItem = {\n  label?: string\n  href?: string\n}\n\nexport type Navbar = {\n  label?: string\n  logo?: ReactNode | string\n  logoIcon?: ReactNode\n  logoResponsive?: boolean\n  position?: string // \"start\" | \"left\" | \"center\" | \"right\" | \"end\"\n  navItems?: NavItem[]\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/types/index.ts"
    },
    {
      "path": "src/registry/components/layout/navbar/navbar-01.tsx",
      "content": "import { NavMain } from \"@/registry/components/layout/navbar/inc/nav-main\"\nimport { NavSystem } from \"@/registry/components/layout/navbar/inc/nav-system\"\nimport { NavLogo } from \"@/registry/components/layout/navbar/inc/part/nav-logo\"\nimport type { Navbar } from \"@/registry/components/layout/navbar/types\"\nimport { Container } from \"@/registry/components/shared/container\"\n\nexport type Navbar01Props = {\n  navbar: Navbar\n}\n\nexport function Navbar01({ navbar }: Navbar01Props) {\n  const shouldApplyFullWidth = !(\n    navbar.navItems ||\n    navbar.logo ||\n    navbar.logoIcon\n  )\n\n  return (\n    <div className=\"fixed top-0 z-50 flex h-16 w-full shrink-0 items-center border-border/60 border-b backdrop-blur supports-[backdrop-filter]:bg-background/90\">\n      <Container className=\"flex items-center justify-center\" size=\"2xl\">\n        <div className=\"relative flex w-full items-center justify-between gap-2\">\n          <NavLogo navbar={navbar} />\n\n          {navbar.navItems && (\n            <NavMain items={navbar.navItems} position={navbar.position} />\n          )}\n\n          <NavSystem\n            className={shouldApplyFullWidth ? \"w-full justify-end\" : undefined}\n          />\n        </div>\n      </Container>\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/navbar-01.tsx"
    }
  ],
  "docs": "http://localhost:3000/docs/components/layout/navbar#navbar-01"
}
