{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-auth-01",
  "type": "registry:component",
  "title": "navbar-auth-01",
  "author": "MaskSysDev <https://github.com/MaskSysDev>",
  "description": "A navbar-auth-01 component.",
  "registryDependencies": [
    "button",
    "sidebar",
    "navigation-menu",
    "http://localhost:3000/r/container.json"
  ],
  "files": [
    {
      "path": "src/registry/components/auth/button/auth-button.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\n\nimport { Button } from \"@/components/ui/button\"\n\nexport function AuthButton() {\n  const { isPending }: { isPending: boolean } = { isPending: true }\n\n  if (isPending) {\n    return null\n  }\n\n  return (\n    <>\n      <Button asChild className=\"mx-1\" size=\"sm\">\n        <Link href={\"/auth/sign-in\"}>Sign in</Link>\n      </Button>\n      <Button asChild size=\"sm\" variant=\"outline\">\n        <Link href={\"/auth/sign-up\"}>Sign up</Link>\n      </Button>\n    </>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/auth/button/auth-button.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/part/nav-item-link.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport {\n  NavigationMenuItem,\n  NavigationMenuLink,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\"\n\nimport type { NavItem } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\nexport function NavItemLink({ label = \"label\", href = \"#\" }: NavItem) {\n  const pathname = usePathname()\n\n  return (\n    <NavigationMenuItem>\n      <NavigationMenuLink\n        asChild\n        className={navigationMenuTriggerStyle({\n          className: cn(\n            \"h-8 bg-transparent px-3 text-base text-muted-foreground hover:bg-transparent hover:text-foreground focus:bg-transparent focus:text-foreground\",\n            pathname === href ? \"text-primary\" : null\n          ),\n        })}\n      >\n        <Link href={href}>{label}</Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/part/nav-item-link.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/part/nav-logo.tsx",
      "content": "import Link from \"next/link\"\nimport type { MouseEventHandler } from \"react\"\n\nimport type { Navbar } from \"@/registry/components/layout/navbar/types\"\nimport { cn } from \"@/registry/lib/cn\"\n\ntype NavLogoProps = {\n  navbar: Navbar\n  onClick?: MouseEventHandler<HTMLAnchorElement> | undefined\n}\n\nexport function NavLogo({ navbar, onClick }: NavLogoProps) {\n  return (\n    <Link\n      className=\"mr-4 flex items-center rounded-md outline-none transition-all focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\"\n      href=\"/\"\n      onClick={onClick}\n    >\n      <div className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none transition-all\">\n        <div className=\"flex shrink-0 items-center gap-2\">\n          {navbar.logoIcon && (\n            <div className=\"flex aspect-square items-center justify-center rounded-md bg-sidebar-primary p-1 text-sidebar-primary-foreground\">\n              {navbar.logoIcon}\n            </div>\n          )}\n\n          {navbar.logo && (\n            <span\n              className={cn(\n                \"shrink-0 font-bold text-3xl leading-normal\",\n                navbar.logoResponsive && navbar.logoIcon && \"hidden md:flex\"\n              )}\n            >\n              {navbar.logo}\n            </span>\n          )}\n        </div>\n      </div>\n      <span className=\"sr-only\">{navbar.label}</span>\n    </Link>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/part/nav-logo.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/part/nav-mobile-nav-user.tsx",
      "content": "\"use client\"\n\nimport { ChevronsUpDown, LogOut, User2Icon } from \"lucide-react\"\nimport Link from \"next/link\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\ntype NavMobileNavUserProps = {\n  user?: {\n    id: string\n    name: string\n    email: string\n    image: string | null | undefined\n    lastName: string\n    role: \"user\" | \"admin\"\n  }\n}\n\nexport function NavMobileNavUser({ user }: NavMobileNavUserProps) {\n  const { isMobile, setOpenMobile } = useSidebar()\n\n  const handleLogout = () => {\n    setOpenMobile(false)\n  }\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              className=\"cursor-pointer text-muted-foreground transition-colors hover:bg-sidebar-accent/40 data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n              size=\"lg\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg\">\n                {user?.image && (\n                  <AvatarImage alt={user.name} src={user.image} />\n                )}\n                <AvatarFallback className=\"rounded-lg\">\n                  <User2Icon className=\"text-muted-foreground\" />\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tights\">\n                <span className=\"line-clamp-1 truncate font-medium\">\n                  {user?.name}\n                </span>\n                <span className=\"line-clamp-1 truncate text-xs\">\n                  {user?.email}\n                </span>\n              </div>\n              <ChevronsUpDown className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            align=\"end\"\n            className=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  {user?.image && (\n                    <AvatarImage alt={user.name} src={user.image} />\n                  )}\n                  <AvatarFallback className=\"rounded-lg\">\n                    <User2Icon className=\"text-muted-foreground\" />\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"line-clamp-1 truncate font-medium\">\n                    {user?.name}\n                  </span>\n                  <span className=\"line-clamp-1 truncate text-muted-foreground text-xs\">\n                    {user?.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem\n                asChild\n                className=\"cursor-pointer transition-colors\"\n                onClick={() => setOpenMobile(false)}\n              >\n                <Link href=\"/settings/profile\">Profile</Link>\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                asChild\n                className=\"cursor-pointer transition-colors\"\n                onClick={() => setOpenMobile(false)}\n              >\n                <Link href=\"/settings/account\">Account</Link>\n              </DropdownMenuItem>\n              {user?.role === \"admin\" && (\n                <DropdownMenuItem\n                  asChild\n                  className=\"cursor-pointer transition-colors\"\n                  onClick={() => setOpenMobile(false)}\n                >\n                  <Link href={\"/admin/dashboard\"}>Dashboard</Link>\n                </DropdownMenuItem>\n              )}\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem\n              className=\"cursor-pointer transition-colors\"\n              onClick={handleLogout}\n            >\n              <LogOut />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/part/nav-mobile-nav-user.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-main-auth.tsx",
      "content": "\"use client\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuList,\n} from \"@/components/ui/navigation-menu\"\n\nimport { AuthButton } from \"@/registry/components/auth/button/auth-button\"\nimport { NavItemLink } from \"@/registry/components/layout/navbar/inc/part/nav-item-link\"\nimport type { NavItem } from \"@/registry/components/layout/navbar/types\"\nimport type { SessionData } from \"@/registry/components/layout/navbar/types/session-data\"\nimport { cn } from \"@/registry/lib/cn\"\n\ntype NavMainAuthProps = {\n  position?: string\n  items: NavItem[]\n  className?: string\n}\n\nexport function NavMainAuth({ position, items, className }: NavMainAuthProps) {\n  const { data: session }: { data: SessionData } = {\n    data: {\n      session: {\n        expiresAt: new Date(),\n        token: \"token\",\n        userAgent: null,\n      },\n      user: {\n        id: \"string\",\n        name: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        image: null,\n        role: \"admin\",\n      },\n    },\n  }\n\n  if (items.length === null) {\n    return null\n  }\n\n  return (\n    <div\n      className={cn(\n        \"hidden w-full items-center justify-start md:flex\",\n        {\n          \"justify-start\": position === \"start\" || position === \"left\",\n          \"justify-center\": position === \"center\",\n          \"justify-end\": position === \"end\" || position === \"right\",\n        },\n        className\n      )}\n    >\n      <NavigationMenu viewport={false}>\n        <NavigationMenuList>\n          {items.map((item) => (\n            <NavItemLink href={item.href} key={item.href} label={item.label} />\n          ))}\n        </NavigationMenuList>\n        {!session && <AuthButton />}\n      </NavigationMenu>\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-main-auth.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-mobile-auth.tsx",
      "content": "\"use client\"\n\nimport { X } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\nimport { NavMobileNavUser } from \"@/registry/components/layout/navbar/inc/part/nav-mobile-nav-user\"\nimport type { Navbar, NavItem } from \"@/registry/components/layout/navbar/types\"\nimport type { SessionData } from \"@/registry/components/layout/navbar/types/session-data\"\nimport { cn } from \"@/registry/lib/cn\"\n\nfunction NavMobileItem({ label = \"label\", href = \"#\" }: NavItem) {\n  const pathname = usePathname()\n  const { setOpenMobile } = useSidebar()\n\n  return (\n    <SidebarMenuItem>\n      <SidebarMenuButton\n        asChild\n        className={cn(\n          \"h-9 px-4 font-medium text-base text-muted-foreground\",\n          pathname === href ? \"bg-primary/10 text-primary\" : null\n        )}\n        onClick={() => setOpenMobile(false)}\n      >\n        <Link href={href}>\n          <span>{label}</span>\n        </Link>\n      </SidebarMenuButton>\n    </SidebarMenuItem>\n  )\n}\n\ninterface NavMobileAuthProps\n  extends React.ComponentProps<typeof Sidebar>,\n    Navbar {}\n\nexport function NavMobileAuth({\n  label,\n  logo,\n  logoIcon,\n  logoResponsive,\n  navItems,\n  ...props\n}: NavMobileAuthProps) {\n  const { setOpenMobile } = useSidebar()\n\n  const { data: session }: { data: SessionData } = {\n    data: {\n      session: {\n        expiresAt: new Date(),\n        token: \"token\",\n        userAgent: null,\n      },\n      user: {\n        id: \"string\",\n        name: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        image: null,\n        role: \"admin\",\n      },\n    },\n  }\n\n  return (\n    <Sidebar {...props}>\n      <SidebarHeader className=\"relative\">\n        <div className=\"flex items-center gap-2 px-2 py-2\">\n          <Link\n            className=\"rounded-md outline-none transition-all focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\"\n            href=\"/\"\n            onClick={() => setOpenMobile(false)}\n          >\n            <div className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none transition-all\">\n              <div className=\"flex shrink-0 items-center gap-2\">\n                {logoIcon && (\n                  <div className=\"flex aspect-square items-center justify-center rounded-md bg-sidebar-primary p-1 text-sidebar-primary-foreground\">\n                    {logoIcon}\n                  </div>\n                )}\n\n                {logo && (\n                  <span\n                    className={cn(\n                      \"shrink-0 font-bold text-3xl leading-normal\",\n                      logoResponsive && logoIcon && \"hidden md:flex\"\n                    )}\n                  >\n                    {logo}\n                  </span>\n                )}\n              </div>\n            </div>\n          </Link>\n        </div>\n        <Button\n          className=\"absolute top-2 right-2 size-7 cursor-pointer text-muted-foreground\"\n          onClick={() => setOpenMobile(false)}\n          size=\"icon\"\n          variant=\"ghost\"\n        >\n          <X />\n        </Button>\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>{label}</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {navItems?.map((item) => (\n                <NavMobileItem\n                  href={item.href}\n                  key={item.href}\n                  label={item.label}\n                />\n              ))}\n\n              {!session && (\n                <>\n                  <Button\n                    asChild\n                    onClick={() => setOpenMobile(false)}\n                    size=\"sm\"\n                  >\n                    <Link href={\"/auth/sign-in\"}>Sign in</Link>\n                  </Button>\n                  <Button\n                    asChild\n                    onClick={() => setOpenMobile(false)}\n                    size=\"sm\"\n                    variant=\"outline\"\n                  >\n                    <Link href={\"/auth/sign-up\"}>Sign up</Link>\n                  </Button>\n                </>\n              )}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n      <SidebarFooter>\n        {session && <NavMobileNavUser user={session?.user} />}\n      </SidebarFooter>\n      <SidebarRail />\n    </Sidebar>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-mobile-auth.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/inc/nav-system-auth.tsx",
      "content": "\"use client\"\n\nimport { Separator } from \"@/components/ui/separator\"\nimport { SidebarTrigger } from \"@/components/ui/sidebar\"\n\nimport { DropdownUser } from \"@/registry/components/auth/dropdown/dropdown-user\"\nimport type { SessionData } from \"@/registry/components/layout/navbar/types/session-data\"\nimport { ToggleTheme } from \"@/registry/components/shared/toggle/toggle-theme\"\nimport { cn } from \"@/registry/lib/cn\"\n\nexport function NavSystemAuth({ className }: { className?: string }) {\n  const { data: session }: { data: SessionData } = {\n    data: {\n      session: {\n        expiresAt: new Date(),\n        token: \"token\",\n        userAgent: null,\n      },\n      user: {\n        id: \"string\",\n        name: \"string\",\n        lastName: \"string\",\n        email: \"string\",\n        image: null,\n        role: \"admin\",\n      },\n    },\n  }\n\n  return (\n    <div className={cn(\"flex h-5 items-center gap-1\", className)}>\n      <ToggleTheme className=\"flex\" />\n\n      {session && <DropdownUser user={session.user} />}\n\n      <Separator\n        className={cn(\"flex md:hidden\", session && \"ml-2\")}\n        orientation=\"vertical\"\n      />\n      <SidebarTrigger className=\"flex size-8 cursor-pointer text-muted-foreground md:hidden\" />\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/inc/nav-system-auth.tsx"
    },
    {
      "path": "src/registry/components/layout/navbar/types/index.ts",
      "content": "import type { ReactNode } from \"react\"\n\nexport type NavItem = {\n  label?: string\n  href?: string\n}\n\nexport type Navbar = {\n  label?: string\n  logo?: ReactNode | string\n  logoIcon?: ReactNode\n  logoResponsive?: boolean\n  position?: string // \"start\" | \"left\" | \"center\" | \"right\" | \"end\"\n  navItems?: NavItem[]\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/types/index.ts"
    },
    {
      "path": "src/registry/components/layout/navbar/types/session-data.ts",
      "content": "export type SessionData = {\n  session: {\n    expiresAt: Date\n    token: string\n    userAgent: string | null | undefined\n  }\n  user: {\n    id: string\n    name: string\n    email: string\n    image: string | null\n    lastName: string\n    role: \"user\" | \"admin\"\n  }\n} | null\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/types/session-data.ts"
    },
    {
      "path": "src/registry/components/layout/navbar/navbar-auth-01.tsx",
      "content": "import { NavMainAuth } from \"@/registry/components/layout/navbar/inc/nav-main-auth\"\nimport { NavSystemAuth } from \"@/registry/components/layout/navbar/inc/nav-system-auth\"\nimport { NavLogo } from \"@/registry/components/layout/navbar/inc/part/nav-logo\"\nimport type { Navbar } from \"@/registry/components/layout/navbar/types\"\nimport { Container } from \"@/registry/components/shared/container\"\n\nexport type NavbarAuth01Props = {\n  navbar: Navbar\n}\n\nexport function NavbarAuth01({ navbar }: NavbarAuth01Props) {\n  const shouldApplyFullWidth = !(\n    navbar.navItems ||\n    navbar.logo ||\n    navbar.logoIcon\n  )\n\n  return (\n    <div className=\"fixed top-0 z-50 flex h-16 w-full shrink-0 items-center border-border/60 border-b backdrop-blur supports-[backdrop-filter]:bg-background/90\">\n      <Container className=\"flex items-center justify-center\" size=\"2xl\">\n        <div className=\"relative flex w-full items-center justify-between gap-2\">\n          <NavLogo navbar={navbar} />\n\n          {navbar.navItems && (\n            <NavMainAuth items={navbar.navItems} position={navbar.position} />\n          )}\n\n          <NavSystemAuth\n            className={shouldApplyFullWidth ? \"w-full justify-end\" : undefined}\n          />\n        </div>\n      </Container>\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/navbar/navbar-auth-01.tsx"
    }
  ],
  "docs": "http://localhost:3000/docs/components/layout/navbar#navbar-auth-01"
}
