{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "banner",
  "type": "registry:component",
  "title": "banner",
  "author": "MaskSysDev <https://github.com/MaskSysDev>",
  "description": "A banner component.",
  "registryDependencies": [
    "badge",
    "button",
    "http://localhost:3000/r/container.json"
  ],
  "files": [
    {
      "path": "src/registry/components/layout/banner/index.tsx",
      "content": "import Link from \"next/link\"\nimport type { ReactNode } from \"react\"\n\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { Container } from \"@/registry/components/shared/container\"\n\nexport type BannerProps = {\n  /**\n   * The background image to display in the banner\n   */\n  backgroundImage?: string\n  backgroundFixed?: boolean\n  gradientTop?: boolean\n  gradientBottom?: boolean\n  gradientTopClassName?: string\n  gradientBottomClassName?: string\n  /**\n   * Use from 1 to 100.\n   * Example: \"40\" is equal to 40% of the viewport height.\n   * @default auto\n   */\n  size?: string\n}\n\nexport function Banner({\n  backgroundImage,\n  backgroundFixed,\n  gradientTop,\n  gradientBottom,\n  gradientTopClassName,\n  gradientBottomClassName,\n  size,\n  className,\n  children,\n  ...props\n}: BannerProps & React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"relative flex min-h-auto w-full justify-center overflow-hidden\",\n        className\n      )}\n      data-slot=\"card\"\n      style={size ? { height: `${size}vh` } : { height: \"auto\" }}\n      {...props}\n    >\n      {backgroundImage && (\n        <div\n          className={cn(\n            \"absolute inset-0 h-full overflow-hidden bg-center bg-cover bg-no-repeat\",\n            backgroundFixed ? \"bg-fixed\" : \"\"\n          )}\n          style={\n            backgroundImage\n              ? {\n                  backgroundImage: `url(${backgroundImage})`,\n                }\n              : {}\n          }\n        />\n      )}\n\n      {gradientTop && (\n        <div\n          className={cn(\n            \"absolute inset-0 bg-gradient-to-b from-primary/10 via-45% via-transparent to-transparent\",\n            gradientTopClassName\n          )}\n        />\n      )}\n\n      {gradientBottom && (\n        <div\n          className={cn(\n            \"absolute inset-0 bg-gradient-to-t from-background/20 via-45% via-transparent to-transparent\",\n            gradientBottomClassName\n          )}\n        />\n      )}\n      <Container className=\"relative\">\n        <div className=\"mx-auto flex h-full max-w-4xl flex-col justify-center gap-4 text-center\">\n          {children}\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport type BannerBadgeProps = {\n  subTitle?: string\n  subTitleColor?: string\n}\n\nexport function BannerBadge({ subTitle, subTitleColor }: BannerBadgeProps) {\n  if (!(subTitle || subTitleColor)) {\n    return null\n  }\n\n  return (\n    <Badge\n      className=\"mx-auto rounded-full px-3 py-1 font-medium text-sm shadow\"\n      variant=\"secondary\"\n    >\n      {subTitle}\n      {subTitleColor && (\n        <span className=\"font-bold text-primary\">{subTitleColor}</span>\n      )}\n    </Badge>\n  )\n}\n\nexport type BannerTitleProps = {\n  className?: string\n  children?: ReactNode\n}\n\nexport function BannerTitle({\n  className,\n  children,\n  ...props\n}: BannerTitleProps & React.ComponentProps<\"h2\">) {\n  if (!children) {\n    return null\n  }\n\n  return (\n    <h2\n      {...props}\n      className={cn(\n        \"scroll-m-20 pb-2 font-bold text-4xl text-shadow-lg tracking-tight first:mt-0 sm:text-6xl md:text-7xl\",\n        className\n      )}\n    >\n      {children}\n    </h2>\n  )\n}\n\nexport type BannerDescriptionProps = {\n  className?: string\n  children?: ReactNode\n}\n\nexport function BannerDescription({\n  className,\n  children,\n  ...props\n}: BannerDescriptionProps & React.ComponentProps<\"p\">) {\n  if (!children) {\n    return null\n  }\n\n  return (\n    <p\n      {...props}\n      className={cn(\n        \"mx-auto mb-4 max-w-2xl text-muted-foreground text-shadow-2xs text-xl\",\n        className\n      )}\n    >\n      {children}\n    </p>\n  )\n}\n\nexport type BannerActionsProps = {\n  action01?: {\n    label?: string\n    href?: string\n  }\n  action02?: {\n    label?: string\n    href?: string\n  }\n}\n\nexport function BannerActions({ action01, action02 }: BannerActionsProps) {\n  if (!(action01 || action02)) {\n    return null\n  }\n\n  return (\n    <div className=\"mb-12 flex flex-col items-center justify-center gap-4 sm:flex-row\">\n      {action01 && (\n        <Button\n          asChild\n          className=\"w-full cursor-pointer px-8 text-base shadow-lg sm:w-fit\"\n          size=\"lg\"\n        >\n          {action01.href ? (\n            <Link href={action01.href}>{action01.label}</Link>\n          ) : (\n            action01.label\n          )}\n        </Button>\n      )}\n\n      {action02 && (\n        <Button\n          asChild\n          className=\"w-full cursor-pointer px-8 text-base shadow-lg sm:w-fit\"\n          size=\"lg\"\n          variant=\"secondary\"\n        >\n          {action02.href ? (\n            <Link\n              href={action02.href}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {action02.label}\n            </Link>\n          ) : (\n            action02.label\n          )}\n        </Button>\n      )}\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/banner/index.tsx"
    }
  ],
  "docs": "http://localhost:3000/docs/components/layout/banner"
}
