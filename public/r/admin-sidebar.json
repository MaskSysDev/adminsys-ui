{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "admin-sidebar",
  "type": "registry:component",
  "title": "admin-sidebar",
  "author": "MaskSysDev <https://github.com/MaskSysDev>",
  "description": "A admin-sidebar component.",
  "registryDependencies": [
    "avatar",
    "dropdown-menu",
    "sidebar",
    "scroll-area",
    "collapsible",
    "http://localhost:3000/r/logo-adminsys.json"
  ],
  "files": [
    {
      "path": "src/registry/components/layout/sidebar/inc/part/sidebar-menu-folder.tsx",
      "content": "\"use client\"\n\nimport { ChevronLeft } from \"lucide-react\"\nimport { usePathname } from \"next/navigation\"\nimport { useEffect, useState } from \"react\"\n\nimport { SidebarSubmenuLink } from \"@/components/layout/sidebar/inc/part/sidebar-submenu-link\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\"\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenuSub,\n  SidebarMenuSubItem,\n} from \"@/components/ui/sidebar\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype SidebarMenuFolderType = {\n  item: {\n    id: string\n    label: string\n    url: string\n    path: string\n    subItems: {\n      id: string\n      label: string\n      url: string\n    }[]\n  }\n}\n\nexport function SidebarMenuFolder({ item }: SidebarMenuFolderType) {\n  const pathname = usePathname()\n  const isActive = pathname.includes(item.path)\n  const [isOpen, setIsOpen] = useState(isActive)\n\n  useEffect(() => {\n    if (isActive) {\n      setIsOpen(true)\n    }\n  }, [isActive])\n\n  return (\n    <Collapsible\n      className=\"group/collapsible\"\n      onOpenChange={setIsOpen}\n      open={isOpen}\n      title={item.label}\n    >\n      <SidebarGroup\n        className={cn(\"p-0\", isOpen && \"rounded-md bg-transparent\")}\n      >\n        <SidebarGroupLabel\n          asChild\n          className={cn(\n            \"group/label h-9 cursor-pointer text-base text-muted-foreground transition-colors hover:bg-sidebar-accent/40 hover:text-sidebar-accent-foreground\",\n            { \"text-sidebar-accent-foreground\": isOpen }\n          )}\n        >\n          <CollapsibleTrigger>\n            {item.label}\n            <ChevronLeft className=\"group-data-[state=open]/collapsible:-rotate-90 ml-auto transition-transform\" />\n          </CollapsibleTrigger>\n        </SidebarGroupLabel>\n        <CollapsibleContent className=\"rounded-b-md\">\n          <SidebarMenuSub className=\"mx-2 gap-0\">\n            {item.subItems.map((subItem) => (\n              <SidebarMenuSubItem key={subItem.label}>\n                <SidebarSubmenuLink label={subItem.label} url={subItem.url} />\n              </SidebarMenuSubItem>\n            ))}\n          </SidebarMenuSub>\n        </CollapsibleContent>\n      </SidebarGroup>\n    </Collapsible>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/part/sidebar-menu-folder.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/inc/part/sidebar-menu-link.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport {\n  SidebarGroup,\n  SidebarMenuButton,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype SidebarMenuLinkType = {\n  label: string\n  url: string\n}\n\nexport function SidebarMenuLink({ label, url }: SidebarMenuLinkType) {\n  const pathname = usePathname()\n  const isActive = pathname === url\n  const { setOpenMobile } = useSidebar()\n\n  return (\n    <SidebarGroup className=\"p-0\">\n      <SidebarMenuButton\n        asChild\n        className={cn(\n          \"h-9 font-medium text-base text-muted-foreground transition-colors hover:bg-sidebar-accent/40 hover:text-sidebar-accent-foreground active:bg-sidebar-accent/40\",\n          isActive && \"bg-primary/10 text-primary\"\n        )}\n        onClick={() => setOpenMobile(false)}\n      >\n        <Link href={url}>{label}</Link>\n      </SidebarMenuButton>\n    </SidebarGroup>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/part/sidebar-menu-link.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/inc/part/sidebar-submenu-link.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\n\nimport { SidebarMenuSubButton, useSidebar } from \"@/components/ui/sidebar\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype SidebarSubmenuLinkType = {\n  label: string\n  url: string\n}\n\nexport function SidebarSubmenuLink({ label, url }: SidebarSubmenuLinkType) {\n  const pathname = usePathname()\n  const isActive = pathname === url\n  const { setOpenMobile } = useSidebar()\n\n  return (\n    <SidebarMenuSubButton\n      asChild\n      className={cn(\n        \"h-9 font-medium text-base text-muted-foreground transition-colors hover:bg-transparent hover:text-sidebar-accent-foreground active:bg-transparent\",\n        isActive && \"text-primary\"\n      )}\n      onClick={() => setOpenMobile(false)}\n    >\n      <Link href={url}>{label}</Link>\n    </SidebarMenuSubButton>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/part/sidebar-submenu-link.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/inc/sidebar-nav-main.tsx",
      "content": "\"use client\"\n\nimport { SidebarMenuFolder } from \"@/components/layout/sidebar/inc/part/sidebar-menu-folder\"\nimport { SidebarMenuLink } from \"@/components/layout/sidebar/inc/part/sidebar-menu-link\"\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\ntype SidebarNavMainType = {\n  sections: {\n    id: string\n    label: string\n    items: {\n      id: string\n      label: string\n      url: string\n      path: string\n      subItems: {\n        id: string\n        label: string\n        url: string\n      }[]\n    }[]\n  }[]\n}\n\nexport function SidebarNavMain({ sections }: SidebarNavMainType) {\n  return (\n    <>\n      {sections.map((section) => (\n        <SidebarGroup key={section.id}>\n          {section.label.length ? (\n            <SidebarGroupLabel className=\"text-muted-foreground/60\">\n              {section.label}\n            </SidebarGroupLabel>\n          ) : null}\n\n          <SidebarMenu>\n            {section.items.map((item) => (\n              <SidebarMenuItem key={item.id}>\n                {item.subItems.length ? (\n                  <SidebarMenuFolder item={item} />\n                ) : (\n                  <SidebarMenuLink label={item.label} url={item.url} />\n                )}\n              </SidebarMenuItem>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n      ))}\n    </>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/sidebar-nav-main.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/inc/sidebar-nav-secondary.tsx",
      "content": "import type * as React from \"react\"\n\nimport { SidebarMenuLink } from \"@/components/layout/sidebar/inc/part/sidebar-menu-link\"\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\nexport function SidebarNavSecondary({\n  items,\n  ...props\n}: {\n  items: {\n    label: string\n    url: string\n  }[]\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n  return (\n    <SidebarGroup {...props}>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.label}>\n              <SidebarMenuLink label={item.label} url={item.url} />\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/sidebar-nav-secondary.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/inc/sidebar-nav-user.tsx",
      "content": "\"use client\"\n\nimport { ChevronsUpDown, LogOut, User2Icon } from \"lucide-react\"\nimport Link from \"next/link\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\ntype SidebarNavUserType = {\n  name: string\n  email: string\n  image?: string\n}\n\nexport function SidebarNavUser({ name, email, image }: SidebarNavUserType) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              className=\"cursor-pointer text-muted-foreground transition-colors hover:bg-sidebar-accent/40 data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n              size=\"lg\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg\">\n                {image && <AvatarImage alt={name} src={image} />}\n                <AvatarFallback className=\"rounded-lg\">\n                  <User2Icon />\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tights\">\n                <span className=\"line-clamp-1 truncate font-medium\">\n                  {name}\n                </span>\n                <span className=\"line-clamp-1 truncate text-xs\">{email}</span>\n              </div>\n              <ChevronsUpDown className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            align=\"end\"\n            className=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  {image && <AvatarImage alt={name} src={image} />}\n                  <AvatarFallback className=\"rounded-lg\">\n                    <User2Icon />\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"line-clamp-1 truncate font-medium\">\n                    {name}\n                  </span>\n                  <span className=\"line-clamp-1 truncate text-muted-foreground text-xs\">\n                    {email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem\n                asChild\n                className=\"cursor-pointer transition-colors\"\n              >\n                <Link href=\"/settings/profile\">Profile</Link>\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                asChild\n                className=\"cursor-pointer transition-colors\"\n              >\n                <Link href=\"/settings/account\">Account</Link>\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem className=\"cursor-pointer transition-colors\">\n              <LogOut />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/inc/sidebar-nav-user.tsx"
    },
    {
      "path": "src/registry/components/layout/sidebar/admin-sidebar.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport type * as React from \"react\"\n\nimport { SidebarNavMain } from \"@/components/layout/sidebar/inc/sidebar-nav-main\"\nimport { SidebarNavSecondary } from \"@/components/layout/sidebar/inc/sidebar-nav-secondary\"\nimport { SidebarNavUser } from \"@/components/layout/sidebar/inc/sidebar-nav-user\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n} from \"@/components/ui/sidebar\"\n\nimport { Logo } from \"@/registry/components/shared/logo/logo-adminsys\"\n\n/**\n * Configuração da barra lateral de administração (AdminSidebar)\n *\n * Responsabilidades:\n * - Definir a estrutura de navegação da área administrativa.\n * - Centralizar os itens de menu, seções e links secundários.\n *\n * Retorno:\n * - Objeto contendo a configuração da barra lateral.\n */\nexport const adminSidebar = {\n  id: \"1\",\n  label: \"AdminSys\",\n  logo: <Logo.Theme />,\n  logoIcon: <Logo.Icon className=\"size-6\" />,\n  sections: [\n    {\n      id: \"2\",\n      label: \"Admin\",\n      items: [\n        {\n          id: \"3\",\n          label: \"Dashboard\",\n          url: \"/admin/dashboard\",\n          path: \"\",\n          subItems: [],\n        },\n        {\n          id: \"4\",\n          label: \"Folder 01\",\n          url: \"\",\n          path: \"/folder-01\",\n          subItems: [\n            {\n              id: \"5\",\n              label: \"Submenu-01\",\n              url: \"/admin/folder-01/submenu-01\",\n            },\n            {\n              id: \"6\",\n              label: \"Submenu-02\",\n              url: \"/admin/folder-01/submenu-02\",\n            },\n          ],\n        },\n      ],\n    },\n  ],\n  navSecondary: [\n    {\n      id: \"1\",\n      label: \"Documentation\",\n      url: \"/docs\",\n    },\n  ],\n}\n\nexport function AdminSidebar({\n  ...props\n}: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar {...props} className=\"border-none\">\n      <SidebarHeader className=\"flex flex-col gap-3 px-4 py-3\">\n        <Link\n          className=\"mr-4 rounded-md outline-none transition-all focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50\"\n          href=\"/\"\n        >\n          <div className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none transition-all\">\n            <div className=\"flex shrink-0 items-center gap-2\">\n              {adminSidebar.logoIcon && (\n                <div className=\"flex aspect-square items-center justify-center rounded-md bg-sidebar-primary p-1 text-sidebar-primary-foreground\">\n                  {adminSidebar.logoIcon}\n                </div>\n              )}\n\n              {adminSidebar.logo && (\n                <span className=\"shrink-0 font-bold text-3xl leading-normal\">\n                  {adminSidebar.logo}\n                </span>\n              )}\n            </div>\n          </div>\n        </Link>\n      </SidebarHeader>\n      <SidebarContent className=\"gap-0 overflow-hidden py-4 pl-1\">\n        <ScrollArea className=\"h-2/3\">\n          <SidebarNavMain sections={adminSidebar.sections} />\n        </ScrollArea>\n        <SidebarNavSecondary\n          className=\"mt-auto\"\n          items={adminSidebar.navSecondary}\n        />\n      </SidebarContent>\n      <SidebarFooter>\n        <SidebarNavUser\n          email={\"admin@email.com\"}\n          image={\"/assets/images/avatar/avatar.jpg\"}\n          name={\"Admin 01\"}\n        />\n      </SidebarFooter>\n    </Sidebar>\n  )\n}\n",
      "type": "registry:component",
      "target": "src/components/layout/sidebar/admin-sidebar.tsx"
    }
  ],
  "docs": "http://localhost:3000/docs/components/layout/sidebar#admin-sidebar"
}
